{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itach\\\\Documents\\\\book-exchange-mern\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// client/src/pages/LoginPage.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { toast } from 'react-toastify';\nimport '../components/Form.css'; // Import Form.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth(); // <--- IMPORTANT: Call the 'login' function\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    // No password confirmation needed for login\n\n    const success = await login(email, password); // <--- IMPORTANT: Call the 'login' function\n    if (success) {\n      navigate('/'); // Redirect to home on successful login\n    }\n    // Error messages handled by toast.error in AuthContext\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-heading\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: \"form-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"form-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form-button\",\n        style: {\n          // Override specific button color and hover\n          backgroundColor: '#007bff',\n          // standard blue for login\n          width: '100%'\n        },\n        onMouseOver: e => e.currentTarget.style.backgroundColor = '#0056b3',\n        onMouseOut: e => e.currentTarget.style.backgroundColor = '#007bff',\n        children: \"Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"hnHou3HvR1dzM0hwPYHhH5cBqKI=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","toast","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","navigate","login","submitHandler","e","preventDefault","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","style","backgroundColor","width","onMouseOver","currentTarget","onMouseOut","_c","$RefreshReg$"],"sources":["C:/Users/itach/Documents/book-exchange-mern/frontend/src/pages/LoginPage.js"],"sourcesContent":["// client/src/pages/LoginPage.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { toast } from 'react-toastify';\r\nimport '../components/Form.css'; // Import Form.css\r\n\r\nfunction LoginPage() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();\r\n    const { login } = useAuth(); // <--- IMPORTANT: Call the 'login' function\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        // No password confirmation needed for login\r\n\r\n        const success = await login(email, password); // <--- IMPORTANT: Call the 'login' function\r\n        if (success) {\r\n            navigate('/'); // Redirect to home on successful login\r\n        }\r\n        // Error messages handled by toast.error in AuthContext\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h2 className=\"form-heading\">Login</h2> {/* <--- IMPORTANT: Changed heading */}\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email Address:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        className=\"form-input\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        className=\"form-input\"\r\n                        required\r\n                    />\r\n                </div>\r\n                {/* <--- IMPORTANT: Removed Username and Confirm Password fields */}\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"form-button\"\r\n                    style={{ // Override specific button color and hover\r\n                        backgroundColor: '#007bff', // standard blue for login\r\n                        width: '100%'\r\n                    }}\r\n                    onMouseOver={(e) => e.currentTarget.style.backgroundColor = '#0056b3'}\r\n                    onMouseOut={(e) => e.currentTarget.style.backgroundColor = '#007bff'}\r\n                >\r\n                    Login {/* <--- IMPORTANT: Changed button text */}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}