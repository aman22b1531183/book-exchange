{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itach\\\\Documents\\\\book-exchange-mern\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/contexts/AuthContext.js\nimport React, { createContext, useState, useEffect, useContext, useRef } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  console.log('--- AuthProvider: RENDER ---');\n  const [user, setUser] = useState(() => {\n    console.log('AuthProvider: user state init');\n    return null;\n  });\n  const [loading, setLoading] = useState(() => {\n    console.log('AuthProvider: loading state init');\n    return true;\n  });\n  const socket = useRef(null);\n\n  // --- Define functions FIRST ---\n  const login = async (email, password) => {\n    console.log('AuthProvider: login called');\n    try {\n      const {\n        data\n      } = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      setUser(data);\n      toast.success('Login successful!');\n      return true;\n    } catch (error) {\n      console.error('AuthProvider: Login error:', error);\n      const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n      toast.error(errorMessage);\n      return false;\n    }\n  };\n  const register = async (username, email, password) => {\n    console.log('AuthProvider: register called');\n    try {\n      const {\n        data\n      } = await axios.post('/api/auth/register', {\n        username,\n        email,\n        password\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      setUser(data);\n      toast.success('Registration successful! Logged in automatically.');\n      return true;\n    } catch (error) {\n      console.error('AuthProvider: Register error:', error);\n      const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n      toast.error(errorMessage);\n      return false;\n    }\n  };\n  const logout = () => {\n    console.log('AuthProvider: logout called');\n    localStorage.removeItem('userInfo');\n    setUser(null);\n    toast.info('Logged out.');\n  };\n  const updateUserInContext = updatedUserData => {\n    console.log('AuthProvider: updateUserInContext called with:', updatedUserData);\n    const currentInfo = JSON.parse(localStorage.getItem('userInfo')) || {};\n    const newInfo = {\n      ...currentInfo,\n      ...updatedUserData\n    };\n    localStorage.setItem('userInfo', JSON.stringify(newInfo));\n    setUser(newInfo);\n  };\n  // --- Functions defined ---\n\n  // Initial load user from localStorage\n  useEffect(() => {\n    console.log('AuthProvider: useEffect triggered (initial load user)');\n    const loadUser = () => {\n      try {\n        const userInfo = localStorage.getItem('userInfo');\n        if (userInfo) {\n          console.log('AuthProvider: Found userInfo in localStorage');\n          const parsedUserInfo = JSON.parse(userInfo);\n          setUser(parsedUserInfo);\n        } else {\n          console.log('AuthProvider: No userInfo in localStorage');\n        }\n      } catch (error) {\n        console.error(\"AuthProvider: Failed to parse user info from localStorage:\", error);\n        localStorage.removeItem('userInfo');\n        setUser(null);\n      } finally {\n        setLoading(false);\n        console.log('AuthProvider: setLoading(false)');\n      }\n    };\n    loadUser();\n  }, []); // Empty dependency array ensures this runs only ONCE on mount\n\n  // Connect to Socket.IO when user is authenticated\n  useEffect(() => {\n    if (user && user.token && !socket.current) {\n      console.log(\"AuthProvider: Connecting Socket.IO...\");\n      socket.current = io('http://localhost:5000', {\n        auth: {\n          token: user.token\n        },\n        withCredentials: true\n      });\n      socket.current.on('connect', () => {\n        console.log('Socket.IO Connected:', socket.current.id);\n        socket.current.emit('join_notifications', user._id);\n      });\n      socket.current.on('disconnect', () => {\n        console.log('Socket.IO Disconnected');\n      });\n      socket.current.on('new_exchange_request', data => {\n        toast.info(`ðŸ”” ${data.message}`);\n        console.log(\"Received new_exchange_request:\", data);\n      });\n      socket.current.on('exchange_status_update', data => {\n        toast.info(`ðŸ“¢ ${data.message}`);\n        console.log(\"Received exchange_status_update:\", data);\n      });\n      socket.current.on('new_message', data => {\n        toast.info(`ðŸ’¬ ${data.message}`);\n        console.log(\"Received new_message:\", data);\n      });\n    } else if (!user && socket.current) {\n      console.log(\"AuthProvider: Disconnecting Socket.IO due to user logout.\");\n      socket.current.disconnect();\n      socket.current = null;\n    }\n    return () => {\n      if (socket.current) {\n        console.log(\"AuthProvider: Cleaning up Socket.IO connection.\");\n        socket.current.disconnect();\n        socket.current = null;\n      }\n    };\n  }, [user]); // Re-run effect when user object changes (login/logout)\n\n  // --- Define authContextValue AFTER all referenced variables/functions ---\n  const authContextValue = {\n    user,\n    loading,\n    login,\n    // Now 'login' is defined above\n    register,\n    // Now 'register' is defined above\n    logout,\n    // Now 'logout' is defined above\n    isAuthenticated: !!user && !loading,\n    token: user ? user.token : null,\n    updateUserInContext // Now 'updateUserInContext' is defined above\n  };\n  // --- End authContextValue definition ---\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"ZGDeMmgGbwyrWPlMR5Vr6CL4a/Q=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useRef","axios","toast","io","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","console","log","user","setUser","loading","setLoading","socket","login","email","password","data","post","localStorage","setItem","JSON","stringify","success","error","errorMessage","response","message","register","username","logout","removeItem","info","updateUserInContext","updatedUserData","currentInfo","parse","getItem","newInfo","loadUser","userInfo","parsedUserInfo","token","current","auth","withCredentials","on","id","emit","_id","disconnect","authContextValue","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/itach/Documents/book-exchange-mern/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// frontend/src/contexts/AuthContext.js\r\nimport React, { createContext, useState, useEffect, useContext, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport io from 'socket.io-client';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    console.log('--- AuthProvider: RENDER ---');\r\n    const [user, setUser] = useState(() => {\r\n        console.log('AuthProvider: user state init');\r\n        return null;\r\n    });\r\n    const [loading, setLoading] = useState(() => {\r\n        console.log('AuthProvider: loading state init');\r\n        return true;\r\n    });\r\n\r\n    const socket = useRef(null);\r\n\r\n    // --- Define functions FIRST ---\r\n    const login = async (email, password) => {\r\n        console.log('AuthProvider: login called');\r\n        try {\r\n            const { data } = await axios.post('/api/auth/login', { email, password });\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n            setUser(data);\r\n            toast.success('Login successful!');\r\n            return true;\r\n        } catch (error) {\r\n            console.error('AuthProvider: Login error:', error);\r\n            const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n            toast.error(errorMessage);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const register = async (username, email, password) => {\r\n        console.log('AuthProvider: register called');\r\n        try {\r\n            const { data } = await axios.post('/api/auth/register', { username, email, password });\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n            setUser(data);\r\n            toast.success('Registration successful! Logged in automatically.');\r\n            return true;\r\n        } catch (error) {\r\n            console.error('AuthProvider: Register error:', error);\r\n            const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n            toast.error(errorMessage);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        console.log('AuthProvider: logout called');\r\n        localStorage.removeItem('userInfo');\r\n        setUser(null);\r\n        toast.info('Logged out.');\r\n    };\r\n\r\n    const updateUserInContext = (updatedUserData) => {\r\n        console.log('AuthProvider: updateUserInContext called with:', updatedUserData);\r\n        const currentInfo = JSON.parse(localStorage.getItem('userInfo')) || {};\r\n        const newInfo = { ...currentInfo, ...updatedUserData };\r\n        localStorage.setItem('userInfo', JSON.stringify(newInfo));\r\n        setUser(newInfo);\r\n    };\r\n    // --- Functions defined ---\r\n\r\n    // Initial load user from localStorage\r\n    useEffect(() => {\r\n        console.log('AuthProvider: useEffect triggered (initial load user)');\r\n        const loadUser = () => {\r\n            try {\r\n                const userInfo = localStorage.getItem('userInfo');\r\n                if (userInfo) {\r\n                    console.log('AuthProvider: Found userInfo in localStorage');\r\n                    const parsedUserInfo = JSON.parse(userInfo);\r\n                    setUser(parsedUserInfo);\r\n                } else {\r\n                    console.log('AuthProvider: No userInfo in localStorage');\r\n                }\r\n            } catch (error) {\r\n                console.error(\"AuthProvider: Failed to parse user info from localStorage:\", error);\r\n                localStorage.removeItem('userInfo');\r\n                setUser(null);\r\n            } finally {\r\n                setLoading(false);\r\n                console.log('AuthProvider: setLoading(false)');\r\n            }\r\n        };\r\n        loadUser();\r\n    }, []); // Empty dependency array ensures this runs only ONCE on mount\r\n\r\n    // Connect to Socket.IO when user is authenticated\r\n    useEffect(() => {\r\n        if (user && user.token && !socket.current) {\r\n            console.log(\"AuthProvider: Connecting Socket.IO...\");\r\n            socket.current = io('http://localhost:5000', {\r\n                auth: { token: user.token },\r\n                withCredentials: true\r\n            });\r\n\r\n            socket.current.on('connect', () => {\r\n                console.log('Socket.IO Connected:', socket.current.id);\r\n                socket.current.emit('join_notifications', user._id);\r\n            });\r\n\r\n            socket.current.on('disconnect', () => {\r\n                console.log('Socket.IO Disconnected');\r\n            });\r\n\r\n            socket.current.on('new_exchange_request', (data) => {\r\n                toast.info(`ðŸ”” ${data.message}`);\r\n                console.log(\"Received new_exchange_request:\", data);\r\n            });\r\n\r\n            socket.current.on('exchange_status_update', (data) => {\r\n                toast.info(`ðŸ“¢ ${data.message}`);\r\n                console.log(\"Received exchange_status_update:\", data);\r\n            });\r\n\r\n            socket.current.on('new_message', (data) => {\r\n                toast.info(`ðŸ’¬ ${data.message}`);\r\n                console.log(\"Received new_message:\", data);\r\n            });\r\n\r\n        } else if (!user && socket.current) {\r\n            console.log(\"AuthProvider: Disconnecting Socket.IO due to user logout.\");\r\n            socket.current.disconnect();\r\n            socket.current = null;\r\n        }\r\n\r\n        return () => {\r\n            if (socket.current) {\r\n                console.log(\"AuthProvider: Cleaning up Socket.IO connection.\");\r\n                socket.current.disconnect();\r\n                socket.current = null;\r\n            }\r\n        };\r\n    }, [user]); // Re-run effect when user object changes (login/logout)\r\n\r\n\r\n    // --- Define authContextValue AFTER all referenced variables/functions ---\r\n    const authContextValue = {\r\n        user,\r\n        loading,\r\n        login, // Now 'login' is defined above\r\n        register, // Now 'register' is defined above\r\n        logout, // Now 'logout' is defined above\r\n        isAuthenticated: !!user && !loading,\r\n        token: user ? user.token : null,\r\n        updateUserInContext // Now 'updateUserInContext' is defined above\r\n    };\r\n    // --- End authContextValue definition ---\r\n\r\n    return (\r\n        <AuthContext.Provider value={authContextValue}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}