{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itach\\\\Documents\\\\book-exchange-mern\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/contexts/AuthContext.js\nimport React, { createContext, useState, useEffect, useContext } from 'react'; // Removed useRef\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n// REMOVED: import io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  console.log('--- AuthProvider: RENDER ---');\n  const [user, setUser] = useState(() => {\n    console.log('AuthProvider: user state init');\n    return null;\n  });\n  const [loading, setLoading] = useState(() => {\n    console.log('AuthProvider: loading state init');\n    return true;\n  });\n\n  // REMOVED: const socket = useRef(null);\n\n  // REMOVED: useEffect for Socket.IO connection handling\n  /*\r\n  useEffect(() => {\r\n      if (user && user.token && !socket.current) {\r\n          // ... socket.io connection logic ...\r\n      } else if (!user && socket.current) {\r\n          // ... socket disconnect logic ...\r\n      }\r\n      return () => {\r\n          if (socket.current) {\r\n              // ... socket cleanup ...\r\n          }\r\n      };\r\n  }, [user]);\r\n  */\n\n  // Initial load user from localStorage (existing code)\n  useEffect(() => {\n    console.log('AuthProvider: useEffect triggered (initial load user)');\n    const loadUser = () => {\n      try {\n        const userInfo = localStorage.getItem('userInfo');\n        if (userInfo) {\n          console.log('AuthProvider: Found userInfo in localStorage');\n          const parsedUserInfo = JSON.parse(userInfo);\n          setUser(parsedUserInfo);\n        } else {\n          console.log('AuthProvider: No userInfo in localStorage');\n        }\n      } catch (error) {\n        console.error(\"AuthProvider: Failed to parse user info from localStorage:\", error);\n        localStorage.removeItem('userInfo');\n        setUser(null);\n      } finally {\n        setLoading(false);\n        console.log('AuthProvider: setLoading(false)');\n      }\n    };\n    loadUser();\n  }, []);\n  const login = async (email, password) => {\n    console.log('AuthProvider: login called');\n    try {\n      const {\n        data\n      } = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      setUser(data);\n      toast.success('Login successful!');\n      return true;\n    } catch (error) {\n      console.error('AuthProvider: Login error:', error);\n      const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n      toast.error(errorMessage);\n      return false;\n    }\n  };\n  const register = async (username, email, password) => {\n    console.log('AuthProvider: register called');\n    try {\n      const {\n        data\n      } = await axios.post('/api/auth/register', {\n        username,\n        email,\n        password\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      setUser(data);\n      toast.success('Registration successful! Logged in automatically.');\n      return true;\n    } catch (error) {\n      console.error('AuthProvider: Register error:', error);\n      const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n      toast.error(errorMessage);\n      return false;\n    }\n  };\n  const logout = () => {\n    console.log('AuthProvider: logout called');\n    localStorage.removeItem('userInfo');\n    setUser(null);\n    toast.info('Logged out.');\n  };\n  const updateUserInContext = updatedUserData => {\n    console.log('AuthProvider: updateUserInContext called with:', updatedUserData);\n    const currentInfo = JSON.parse(localStorage.getItem('userInfo')) || {};\n    const newInfo = {\n      ...currentInfo,\n      ...updatedUserData\n    };\n    localStorage.setItem('userInfo', JSON.stringify(newInfo));\n    setUser(newInfo);\n  };\n  const authContextValue = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user && !loading,\n    token: user ? user.token : null,\n    updateUserInContext\n    // REMOVED: socket: socket.current\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"7qKQc0oDp0x2MbHjpzxpYWdM9Yw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","console","log","user","setUser","loading","setLoading","loadUser","userInfo","localStorage","getItem","parsedUserInfo","JSON","parse","error","removeItem","login","email","password","data","post","setItem","stringify","success","errorMessage","response","message","register","username","logout","info","updateUserInContext","updatedUserData","currentInfo","newInfo","authContextValue","isAuthenticated","token","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/itach/Documents/book-exchange-mern/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// frontend/src/contexts/AuthContext.js\r\nimport React, { createContext, useState, useEffect, useContext } from 'react'; // Removed useRef\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n// REMOVED: import io from 'socket.io-client';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    console.log('--- AuthProvider: RENDER ---');\r\n    const [user, setUser] = useState(() => {\r\n        console.log('AuthProvider: user state init');\r\n        return null;\r\n    });\r\n    const [loading, setLoading] = useState(() => {\r\n        console.log('AuthProvider: loading state init');\r\n        return true;\r\n    });\r\n\r\n    // REMOVED: const socket = useRef(null);\r\n\r\n    // REMOVED: useEffect for Socket.IO connection handling\r\n    /*\r\n    useEffect(() => {\r\n        if (user && user.token && !socket.current) {\r\n            // ... socket.io connection logic ...\r\n        } else if (!user && socket.current) {\r\n            // ... socket disconnect logic ...\r\n        }\r\n        return () => {\r\n            if (socket.current) {\r\n                // ... socket cleanup ...\r\n            }\r\n        };\r\n    }, [user]);\r\n    */\r\n\r\n    // Initial load user from localStorage (existing code)\r\n    useEffect(() => {\r\n        console.log('AuthProvider: useEffect triggered (initial load user)');\r\n        const loadUser = () => {\r\n            try {\r\n                const userInfo = localStorage.getItem('userInfo');\r\n                if (userInfo) {\r\n                    console.log('AuthProvider: Found userInfo in localStorage');\r\n                    const parsedUserInfo = JSON.parse(userInfo);\r\n                    setUser(parsedUserInfo);\r\n                } else {\r\n                    console.log('AuthProvider: No userInfo in localStorage');\r\n                }\r\n            } catch (error) {\r\n                console.error(\"AuthProvider: Failed to parse user info from localStorage:\", error);\r\n                localStorage.removeItem('userInfo');\r\n                setUser(null);\r\n            } finally {\r\n                setLoading(false);\r\n                console.log('AuthProvider: setLoading(false)');\r\n            }\r\n        };\r\n        loadUser();\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        console.log('AuthProvider: login called');\r\n        try {\r\n            const { data } = await axios.post('/api/auth/login', { email, password });\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n            setUser(data);\r\n            toast.success('Login successful!');\r\n            return true;\r\n        } catch (error) {\r\n            console.error('AuthProvider: Login error:', error);\r\n            const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n            toast.error(errorMessage);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const register = async (username, email, password) => {\r\n        console.log('AuthProvider: register called');\r\n        try {\r\n            const { data } = await axios.post('/api/auth/register', { username, email, password });\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n            setUser(data);\r\n            toast.success('Registration successful! Logged in automatically.');\r\n            return true;\r\n        } catch (error) {\r\n            console.error('AuthProvider: Register error:', error);\r\n            const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n            toast.error(errorMessage);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        console.log('AuthProvider: logout called');\r\n        localStorage.removeItem('userInfo');\r\n        setUser(null);\r\n        toast.info('Logged out.');\r\n    };\r\n\r\n    const updateUserInContext = (updatedUserData) => {\r\n        console.log('AuthProvider: updateUserInContext called with:', updatedUserData);\r\n        const currentInfo = JSON.parse(localStorage.getItem('userInfo')) || {};\r\n        const newInfo = { ...currentInfo, ...updatedUserData };\r\n        localStorage.setItem('userInfo', JSON.stringify(newInfo));\r\n        setUser(newInfo);\r\n    };\r\n\r\n    const authContextValue = {\r\n        user,\r\n        loading,\r\n        login,\r\n        register,\r\n        logout,\r\n        isAuthenticated: !!user && !loading,\r\n        token: user ? user.token : null,\r\n        updateUserInContext,\r\n        // REMOVED: socket: socket.current\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={authContextValue}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}