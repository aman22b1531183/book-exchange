{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itach\\\\Documents\\\\book-exchange-mern\\\\frontend\\\\src\\\\pages\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/ProfilePage.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useParams } from 'react-router-dom'; // <--- NEW IMPORT for getting user ID from URL\nimport ReviewItem from '../components/ReviewItem'; // <--- NEW IMPORT for displaying individual reviews\nimport '../components/Form.css'; // For form styles\nimport '../App.css'; // For page-heading, status-message\nimport './Profile.css'; // We'll update this for review section styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const {\n    user: authUser,\n    token,\n    updateUserInContext\n  } = useAuth();\n  const {\n    id: userIdFromUrl\n  } = useParams(); // Get user ID from URL if viewing another user's profile\n  const isMyProfile = !userIdFromUrl || authUser && authUser._id === userIdFromUrl;\n\n  // Determine which user's profile to display\n  const userIdToDisplay = isMyProfile ? authUser === null || authUser === void 0 ? void 0 : authUser._id : userIdFromUrl;\n  const [profileData, setProfileData] = useState({\n    // Renamed from formData for clarity on fetched data\n    username: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    profilePictureUrl: ''\n  });\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [profileImageFile, setProfileImageFile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState([]); // <--- NEW STATE for reviews\n  const [averageRating, setAverageRating] = useState(0); // <--- NEW STATE for average rating\n  const [numReviews, setNumReviews] = useState(0); // <--- NEW STATE for number of reviews\n  const [reviewsLoading, setReviewsLoading] = useState(true);\n  const [reviewsError, setReviewsError] = useState(null);\n\n  // <--- NEW: Function to fetch user reviews ---\n  const fetchUserReviews = useCallback(async id => {\n    if (!id) return;\n    setReviewsLoading(true);\n    try {\n      // Reviews are public, so no token needed\n      const {\n        data\n      } = await axios.get(`/api/reviews/user/${id}`);\n      setReviews(data.reviews);\n      setAverageRating(data.averageRating);\n      setNumReviews(data.numReviews);\n      setReviewsLoading(false);\n    } catch (err) {\n      console.error('Error fetching user reviews:', err);\n      setReviewsError('Failed to load reviews.');\n      toast.error('Failed to load user reviews.');\n      setReviewsLoading(false);\n    }\n  }, []); // No dependencies as it's just fetching reviews for a given ID\n\n  const fetchUserProfile = useCallback(async id => {\n    if (!id) {\n      setLoading(false);\n      setError('User ID not available to fetch profile.');\n      return;\n    }\n    let currentToken = null;\n    // Only include token if fetching own profile or if route is protected (for other user's full profile info later)\n    if (isMyProfile && token) {\n      currentToken = token;\n    }\n    try {\n      setLoading(true);\n      const config = currentToken ? {\n        headers: {\n          Authorization: `Bearer ${currentToken}`\n        }\n      } : {};\n      const {\n        data\n      } = await axios.get(`/api/auth/profile/${id}`, config); // Use /profile/:id if you add it, else default /profile\n      setProfileData({\n        username: data.username || '',\n        email: data.email || '',\n        firstName: data.firstName || '',\n        lastName: data.lastName || '',\n        address: data.address || '',\n        city: data.city || '',\n        state: data.state || '',\n        zipCode: data.zipCode || '',\n        profilePictureUrl: data.profilePictureUrl || 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwM_ABMwdQL7Zb4rLmaMl964QE9D4J20TA3w&s'\n      });\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching profile:', err);\n      const errorMessage = err.response && err.response.data.message ? err.response.data.message : err.message;\n      setError(`Failed to load profile: ${errorMessage}`);\n      toast.error(`Failed to load profile: ${errorMessage}`);\n      setLoading(false);\n    }\n  }, [isMyProfile, token]); // Only depends on token and whether it's my profile\n\n  useEffect(() => {\n    if (userIdToDisplay) {\n      fetchUserProfile(userIdToDisplay);\n      fetchUserReviews(userIdToDisplay); // Fetch reviews when profile loads\n    }\n  }, [userIdToDisplay, fetchUserProfile, fetchUserReviews]);\n  const handleChange = e => {\n    setProfileData({\n      ...profileData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handlePasswordChange = e => {\n    if (e.target.name === 'password') setPassword(e.target.value);\n    if (e.target.name === 'confirmPassword') setConfirmPassword(e.target.value);\n  };\n  const handleFileChange = e => {\n    setProfileImageFile(e.target.files[0]);\n    if (e.target.files[0]) {\n      setProfileData(prev => ({\n        ...prev,\n        profilePictureUrl: URL.createObjectURL(e.target.files[0])\n      }));\n    } else {\n      setProfileData(prev => ({\n        ...prev,\n        profilePictureUrl: prev.profilePictureUrl || 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwM_ABMwdQL7Zb4rLmaMl964QE9D4J20TA3w&s'\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password && password !== confirmPassword) {\n      toast.error('New passwords do not match!');\n      return;\n    }\n    if (!isMyProfile) {\n      // Prevent submitting form if it's not the user's own profile\n      toast.error('You can only update your own profile.');\n      return;\n    }\n    const dataToUpdate = new FormData();\n    dataToUpdate.append('username', profileData.username);\n    dataToUpdate.append('email', profileData.email);\n    dataToUpdate.append('firstName', profileData.firstName);\n    dataToUpdate.append('lastName', profileData.lastName);\n    dataToUpdate.append('address', profileData.address);\n    dataToUpdate.append('city', profileData.city);\n    dataToUpdate.append('state', profileData.state);\n    dataToUpdate.append('zipCode', profileData.zipCode);\n    if (profileImageFile) {\n      dataToUpdate.append('profileImage', profileImageFile);\n    } else {\n      dataToUpdate.append('profilePictureUrl', profileData.profilePictureUrl);\n    }\n    if (password) {\n      dataToUpdate.append('password', password);\n    }\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put('/api/auth/profile', dataToUpdate, config);\n      toast.success('Profile updated successfully!');\n      updateUserInContext(data); // Update AuthContext\n      setPassword(''); // Clear password fields\n      setConfirmPassword('');\n      // Re-fetch profile to ensure all data is consistent after update\n      fetchUserProfile(userIdToDisplay);\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n      toast.error(`Failed to update profile: ${errorMessage}`);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message\",\n      children: \"Loading profile...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 16\n    }, this);\n  }\n  if (!profileData.username) {\n    // Fallback if profile data is unexpectedly empty\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message no-content\",\n      children: \"Profile data not available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-heading\",\n      children: isMyProfile ? 'My Profile' : `${profileData.username}'s Profile`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section profile-details-section\",\n      children: isMyProfile ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"profile-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group profile-picture-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: profileData.profilePictureUrl,\n            alt: \"Profile\",\n            className: \"profile-avatar\",\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwM_ABMwdQL7Zb4rLmaMl964QE9D4J20TA3w&s';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"profileImageFile\",\n            className: \"form-label\",\n            children: \"Upload New Profile Picture (Optional):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"profileImageFile\",\n            name: \"profileImageFile\",\n            onChange: handleFileChange,\n            accept: \"image/*\",\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"profilePictureUrlText\",\n            className: \"form-label\",\n            children: \"Or provide Image URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"profilePictureUrlText\",\n            name: \"profilePictureUrl\",\n            value: profileData.profilePictureUrl,\n            onChange: handleChange,\n            className: \"form-input\",\n            placeholder: \"e.g., https://example.com/your-pic.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"form-label\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            value: profileData.username,\n            onChange: handleChange,\n            className: \"form-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: profileData.email,\n            onChange: handleChange,\n            className: \"form-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            className: \"form-label\",\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstName\",\n            name: \"firstName\",\n            value: profileData.firstName,\n            onChange: handleChange,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            className: \"form-label\",\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastName\",\n            name: \"lastName\",\n            value: profileData.lastName,\n            onChange: handleChange,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            className: \"form-label\",\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"address\",\n            name: \"address\",\n            value: profileData.address,\n            onChange: handleChange,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            className: \"form-label\",\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"city\",\n            name: \"city\",\n            value: profileData.city,\n            onChange: handleChange,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"state\",\n            className: \"form-label\",\n            children: \"State:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"state\",\n            name: \"state\",\n            value: profileData.state,\n            onChange: handleChange,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"zipCode\",\n            className: \"form-label\",\n            children: \"Zip Code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"zipCode\",\n            name: \"zipCode\",\n            value: profileData.zipCode,\n            onChange: handleChange,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-heading\",\n          children: \"Change Password (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: password,\n            onChange: handlePasswordChange,\n            className: \"form-input\",\n            placeholder: \"Enter new password (min 6 characters)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            className: \"form-label\",\n            children: \"Confirm New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            value: confirmPassword,\n            onChange: handlePasswordChange,\n            className: \"form-input\",\n            placeholder: \"Confirm new password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"form-button\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this) :\n      /*#__PURE__*/\n      // Display non-editable profile info for other users\n      _jsxDEV(\"div\", {\n        className: \"profile-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-picture-group\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profileData.profilePictureUrl,\n            alt: \"Profile\",\n            className: \"profile-avatar\",\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwM_ABMwdQL7Zb4rLmaMl964QE9D4J20TA3w&s';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 28\n          }, this), \" \", profileData.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 28\n          }, this), \" \", profileData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this), profileData.firstName && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 54\n          }, this), \" \", profileData.firstName, \" \", profileData.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 51\n        }, this), profileData.city && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 49\n          }, this), \" \", profileData.city, \", \", profileData.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 46\n        }, this), profileData.address && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 52\n          }, this), \" \", profileData.address, \", \", profileData.zipCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section reviews-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-heading\",\n        children: isMyProfile ? 'My Reviews' : `${profileData.username}'s Reviews`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), reviewsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message\",\n        children: \"Loading reviews...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }, this) : reviewsError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message error-message\",\n        children: reviewsError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [numReviews > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"average-rating-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rating-value\",\n            children: averageRating.toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stars-display\",\n            children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `star ${star <= averageRating ? 'filled' : 'empty'}`,\n              children: \"\\u2605\"\n            }, star, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"num-reviews\",\n            children: [\"(\", numReviews, \" reviews)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message no-reviews\",\n          children: \"No reviews yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reviews-list\",\n          children: reviews.length > 0 && reviews.map(review => /*#__PURE__*/_jsxDEV(ReviewItem, {\n            review: review\n          }, review._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"ZPHyl+qkfdwYYCGFNbPynssBS88=\", false, function () {\n  return [useAuth, useParams];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","toast","useAuth","useParams","ReviewItem","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePage","_s","user","authUser","token","updateUserInContext","id","userIdFromUrl","isMyProfile","_id","userIdToDisplay","profileData","setProfileData","username","email","firstName","lastName","address","city","state","zipCode","profilePictureUrl","password","setPassword","confirmPassword","setConfirmPassword","profileImageFile","setProfileImageFile","loading","setLoading","error","setError","reviews","setReviews","averageRating","setAverageRating","numReviews","setNumReviews","reviewsLoading","setReviewsLoading","reviewsError","setReviewsError","fetchUserReviews","data","get","err","console","fetchUserProfile","currentToken","config","headers","Authorization","errorMessage","response","message","handleChange","e","target","name","value","handlePasswordChange","handleFileChange","files","prev","URL","createObjectURL","handleSubmit","preventDefault","dataToUpdate","FormData","append","put","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","src","alt","onError","onerror","htmlFor","type","onChange","accept","placeholder","required","toFixed","map","star","length","review","_c","$RefreshReg$"],"sources":["C:/Users/itach/Documents/book-exchange-mern/frontend/src/pages/ProfilePage.js"],"sourcesContent":["// frontend/src/pages/ProfilePage.js\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useParams } from 'react-router-dom'; // <--- NEW IMPORT for getting user ID from URL\r\nimport ReviewItem from '../components/ReviewItem'; // <--- NEW IMPORT for displaying individual reviews\r\nimport '../components/Form.css'; // For form styles\r\nimport '../App.css'; // For page-heading, status-message\r\nimport './Profile.css'; // We'll update this for review section styling\r\n\r\nfunction ProfilePage() {\r\n    const { user: authUser, token, updateUserInContext } = useAuth();\r\n    const { id: userIdFromUrl } = useParams(); // Get user ID from URL if viewing another user's profile\r\n    const isMyProfile = !userIdFromUrl || (authUser && authUser._id === userIdFromUrl);\r\n\r\n    // Determine which user's profile to display\r\n    const userIdToDisplay = isMyProfile ? authUser?._id : userIdFromUrl;\r\n\r\n    const [profileData, setProfileData] = useState({ // Renamed from formData for clarity on fetched data\r\n        username: '',\r\n        email: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        address: '',\r\n        city: '',\r\n        state: '',\r\n        zipCode: '',\r\n        profilePictureUrl: '',\r\n    });\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [profileImageFile, setProfileImageFile] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const [reviews, setReviews] = useState([]); // <--- NEW STATE for reviews\r\n    const [averageRating, setAverageRating] = useState(0); // <--- NEW STATE for average rating\r\n    const [numReviews, setNumReviews] = useState(0); // <--- NEW STATE for number of reviews\r\n    const [reviewsLoading, setReviewsLoading] = useState(true);\r\n    const [reviewsError, setReviewsError] = useState(null);\r\n\r\n\r\n    // <--- NEW: Function to fetch user reviews ---\r\n    const fetchUserReviews = useCallback(async (id) => {\r\n        if (!id) return;\r\n        setReviewsLoading(true);\r\n        try {\r\n            // Reviews are public, so no token needed\r\n            const { data } = await axios.get(`/api/reviews/user/${id}`);\r\n            setReviews(data.reviews);\r\n            setAverageRating(data.averageRating);\r\n            setNumReviews(data.numReviews);\r\n            setReviewsLoading(false);\r\n        } catch (err) {\r\n            console.error('Error fetching user reviews:', err);\r\n            setReviewsError('Failed to load reviews.');\r\n            toast.error('Failed to load user reviews.');\r\n            setReviewsLoading(false);\r\n        }\r\n    }, []); // No dependencies as it's just fetching reviews for a given ID\r\n\r\n    const fetchUserProfile = useCallback(async (id) => {\r\n        if (!id) {\r\n            setLoading(false);\r\n            setError('User ID not available to fetch profile.');\r\n            return;\r\n        }\r\n        let currentToken = null;\r\n        // Only include token if fetching own profile or if route is protected (for other user's full profile info later)\r\n        if (isMyProfile && token) {\r\n            currentToken = token;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            const config = currentToken ? { headers: { Authorization: `Bearer ${currentToken}` } } : {};\r\n            const { data } = await axios.get(`/api/auth/profile/${id}`, config); // Use /profile/:id if you add it, else default /profile\r\n            setProfileData({\r\n                username: data.username || '',\r\n                email: data.email || '',\r\n                firstName: data.firstName || '',\r\n                lastName: data.lastName || '',\r\n                address: data.address || '',\r\n                city: data.city || '',\r\n                state: data.state || '',\r\n                zipCode: data.zipCode || '',\r\n                profilePictureUrl: data.profilePictureUrl || 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwM_ABMwdQL7Zb4rLmaMl964QE9D4J20TA3w&s',\r\n            });\r\n            setLoading(false);\r\n        } catch (err) {\r\n            console.error('Error fetching profile:', err);\r\n            const errorMessage = err.response && err.response.data.message\r\n                ? err.response.data.message\r\n                : err.message;\r\n            setError(`Failed to load profile: ${errorMessage}`);\r\n            toast.error(`Failed to load profile: ${errorMessage}`);\r\n            setLoading(false);\r\n        }\r\n    }, [isMyProfile, token]); // Only depends on token and whether it's my profile\r\n\r\n\r\n    useEffect(() => {\r\n        if (userIdToDisplay) {\r\n            fetchUserProfile(userIdToDisplay);\r\n            fetchUserReviews(userIdToDisplay); // Fetch reviews when profile loads\r\n        }\r\n    }, [userIdToDisplay, fetchUserProfile, fetchUserReviews]);\r\n\r\n    const handleChange = (e) => {\r\n        setProfileData({ ...profileData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        if (e.target.name === 'password') setPassword(e.target.value);\r\n        if (e.target.name === 'confirmPassword') setConfirmPassword(e.target.value);\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        setProfileImageFile(e.target.files[0]);\r\n        if (e.target.files[0]) {\r\n            setProfileData(prev => ({\r\n                ...prev,\r\n                profilePictureUrl: URL.createObjectURL(e.target.files[0])\r\n            }));\r\n        } else {\r\n            setProfileData(prev => ({\r\n                ...prev,\r\n                profilePictureUrl: prev.profilePictureUrl || 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwM_ABMwdQL7Zb4rLmaMl964QE9D4J20TA3w&s'\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password && password !== confirmPassword) {\r\n            toast.error('New passwords do not match!');\r\n            return;\r\n        }\r\n\r\n        if (!isMyProfile) { // Prevent submitting form if it's not the user's own profile\r\n            toast.error('You can only update your own profile.');\r\n            return;\r\n        }\r\n\r\n        const dataToUpdate = new FormData();\r\n        dataToUpdate.append('username', profileData.username);\r\n        dataToUpdate.append('email', profileData.email);\r\n        dataToUpdate.append('firstName', profileData.firstName);\r\n        dataToUpdate.append('lastName', profileData.lastName);\r\n        dataToUpdate.append('address', profileData.address);\r\n        dataToUpdate.append('city', profileData.city);\r\n        dataToUpdate.append('state', profileData.state);\r\n        dataToUpdate.append('zipCode', profileData.zipCode);\r\n\r\n        if (profileImageFile) {\r\n            dataToUpdate.append('profileImage', profileImageFile);\r\n        } else {\r\n            dataToUpdate.append('profilePictureUrl', profileData.profilePictureUrl);\r\n        }\r\n\r\n        if (password) {\r\n            dataToUpdate.append('password', password);\r\n        }\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.put('/api/auth/profile', dataToUpdate, config);\r\n            toast.success('Profile updated successfully!');\r\n            updateUserInContext(data); // Update AuthContext\r\n            setPassword(''); // Clear password fields\r\n            setConfirmPassword('');\r\n            // Re-fetch profile to ensure all data is consistent after update\r\n            fetchUserProfile(userIdToDisplay);\r\n\r\n        } catch (error) {\r\n            console.error('Error updating profile:', error);\r\n            const errorMessage = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n            toast.error(`Failed to update profile: ${errorMessage}`);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div className=\"status-message\">Loading profile...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"status-message error-message\">Error: {error}</div>;\r\n    }\r\n\r\n    if (!profileData.username) { // Fallback if profile data is unexpectedly empty\r\n        return <div className=\"status-message no-content\">Profile data not available.</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile-page-container\">\r\n            <h1 className=\"page-heading\">{isMyProfile ? 'My Profile' : `${profileData.username}'s Profile`}</h1>\r\n\r\n            {/* Profile Info and Update Form (only for own profile) */}\r\n            <div className=\"profile-section profile-details-section\">\r\n                {isMyProfile ? (\r\n                    <form onSubmit={handleSubmit} className=\"profile-form\">\r\n                        <div className=\"form-group profile-picture-group\">\r\n                            <img\r\n                                src={profileData.profilePictureUrl}\r\n                                alt=\"Profile\"\r\n                                className=\"profile-avatar\"\r\n                                onError={(e) => { e.target.onerror = null; e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwM_ABMwdQL7Zb4rLmaMl964QE9D4J20TA3w&s'; }}\r\n                            />\r\n                            <label htmlFor=\"profileImageFile\" className=\"form-label\">Upload New Profile Picture (Optional):</label>\r\n                            <input\r\n                                type=\"file\"\r\n                                id=\"profileImageFile\"\r\n                                name=\"profileImageFile\"\r\n                                onChange={handleFileChange}\r\n                                accept=\"image/*\"\r\n                                className=\"form-input\"\r\n                            />\r\n                            <label htmlFor=\"profilePictureUrlText\" className=\"form-label\">Or provide Image URL:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"profilePictureUrlText\"\r\n                                name=\"profilePictureUrl\"\r\n                                value={profileData.profilePictureUrl}\r\n                                onChange={handleChange}\r\n                                className=\"form-input\"\r\n                                placeholder=\"e.g., https://example.com/your-pic.jpg\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\" className=\"form-label\">Username:</label>\r\n                            <input type=\"text\" id=\"username\" name=\"username\" value={profileData.username} onChange={handleChange} className=\"form-input\" required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\" className=\"form-label\">Email Address:</label>\r\n                            <input type=\"email\" id=\"email\" name=\"email\" value={profileData.email} onChange={handleChange} className=\"form-input\" required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"firstName\" className=\"form-label\">First Name:</label>\r\n                            <input type=\"text\" id=\"firstName\" name=\"firstName\" value={profileData.firstName} onChange={handleChange} className=\"form-input\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"lastName\" className=\"form-label\">Last Name:</label>\r\n                            <input type=\"text\" id=\"lastName\" name=\"lastName\" value={profileData.lastName} onChange={handleChange} className=\"form-input\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"address\" className=\"form-label\">Address:</label>\r\n                            <input type=\"text\" id=\"address\" name=\"address\" value={profileData.address} onChange={handleChange} className=\"form-input\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"city\" className=\"form-label\">City:</label>\r\n                            <input type=\"text\" id=\"city\" name=\"city\" value={profileData.city} onChange={handleChange} className=\"form-input\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"state\" className=\"form-label\">State:</label>\r\n                            <input type=\"text\" id=\"state\" name=\"state\" value={profileData.state} onChange={handleChange} className=\"form-input\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"zipCode\" className=\"form-label\">Zip Code:</label>\r\n                            <input type=\"text\" id=\"zipCode\" name=\"zipCode\" value={profileData.zipCode} onChange={handleChange} className=\"form-input\" />\r\n                        </div>\r\n\r\n                        <hr className=\"divider\" />\r\n                        <h2 className=\"section-heading\">Change Password (Optional)</h2>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\" className=\"form-label\">New Password:</label>\r\n                            <input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={handlePasswordChange} className=\"form-input\" placeholder=\"Enter new password (min 6 characters)\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirmPassword\" className=\"form-label\">Confirm New Password:</label>\r\n                            <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" value={confirmPassword} onChange={handlePasswordChange} className=\"form-input\" placeholder=\"Confirm new password\" />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"form-button\">Update Profile</button>\r\n                    </form>\r\n                ) : (\r\n                    // Display non-editable profile info for other users\r\n                    <div className=\"profile-display\">\r\n                         <div className=\"profile-picture-group\">\r\n                            <img\r\n                                src={profileData.profilePictureUrl}\r\n                                alt=\"Profile\"\r\n                                className=\"profile-avatar\"\r\n                                onError={(e) => { e.target.onerror = null; e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwM_ABMwdQL7Zb4rLmaMl964QE9D4J20TA3w&s'; }}\r\n                            />\r\n                        </div>\r\n                        <p><strong>Username:</strong> {profileData.username}</p>\r\n                        <p><strong>Email:</strong> {profileData.email}</p>\r\n                        {profileData.firstName && <p><strong>Name:</strong> {profileData.firstName} {profileData.lastName}</p>}\r\n                        {profileData.city && <p><strong>Location:</strong> {profileData.city}, {profileData.state}</p>}\r\n                        {profileData.address && <p><strong>Address:</strong> {profileData.address}, {profileData.zipCode}</p>}\r\n                        {/* Add more public profile fields here */}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Reviews Section --- NEW --- */}\r\n            <div className=\"profile-section reviews-section\">\r\n                <h2 className=\"section-heading\">\r\n                    {isMyProfile ? 'My Reviews' : `${profileData.username}'s Reviews`}\r\n                </h2>\r\n                {reviewsLoading ? (\r\n                    <div className=\"status-message\">Loading reviews...</div>\r\n                ) : reviewsError ? (\r\n                    <div className=\"status-message error-message\">{reviewsError}</div>\r\n                ) : (\r\n                    <>\r\n                        {numReviews > 0 ? (\r\n                            <div className=\"average-rating-display\">\r\n                                <span className=\"rating-value\">{averageRating.toFixed(1)}</span>\r\n                                <span className=\"stars-display\">\r\n                                    {[1, 2, 3, 4, 5].map((star) => (\r\n                                        <span key={star} className={`star ${star <= averageRating ? 'filled' : 'empty'}`}>\r\n                                            &#9733;\r\n                                        </span>\r\n                                    ))}\r\n                                </span>\r\n                                <span className=\"num-reviews\">({numReviews} reviews)</span>\r\n                            </div>\r\n                        ) : (\r\n                            <p className=\"status-message no-reviews\">No reviews yet.</p>\r\n                        )}\r\n\r\n                        <div className=\"reviews-list\">\r\n                            {reviews.length > 0 && reviews.map(review => (\r\n                                <ReviewItem key={review._id} review={review} />\r\n                            ))}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}