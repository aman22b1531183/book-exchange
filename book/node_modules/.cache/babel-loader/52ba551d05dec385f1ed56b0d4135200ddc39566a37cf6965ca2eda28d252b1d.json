{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itach\\\\Documents\\\\book-exchange-mern\\\\frontend\\\\src\\\\pages\\\\ExchangeDetailsPage.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/ExchangeDetailsPage.js\nimport React, { useEffect, useState, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport ReviewForm from '../components/ReviewForm'; // <--- NEW IMPORT\nimport '../pages/ExchangeDetails.css'; // Assuming you have general Exchange Details styling\nimport '../App.css'; // For page-heading, status-message\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ExchangeDetailsPage() {\n  _s();\n  const {\n    id: exchangeRequestId\n  } = useParams();\n  const {\n    token,\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [exchange, setExchange] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessageContent, setNewMessageContent] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [reviewStatus, setReviewStatus] = useState(null); // <--- NEW STATE for review status\n  const [showReviewForm, setShowReviewForm] = useState(false); // <--- NEW STATE to toggle review form\n\n  const messagesEndRef = useRef(null);\n  const fetchExchangeDetails = useCallback(async () => {\n    if (!token || !exchangeRequestId) return;\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/exchanges/${exchangeRequestId}`, config);\n      setExchange(data);\n      setLoading(false);\n      // Fetch review status immediately after exchange details are loaded\n      if (data.status === 'Completed') {\n        await fetchReviewStatus(data._id);\n      }\n    } catch (err) {\n      console.error('Error fetching exchange details:', err);\n      const errorMessage = err.response && err.response.data.message ? err.response.data.message : err.message;\n      setError(`Failed to load exchange details: ${errorMessage}`);\n      toast.error(`Failed to load exchange details: ${errorMessage}`);\n      setLoading(false);\n      if (err.response && (err.response.status === 403 || err.response.status === 404)) {\n        navigate('/exchanges'); // Redirect if not authorized or not found\n      }\n    }\n  }, [exchangeRequestId, token, navigate]);\n  const fetchMessages = useCallback(async () => {\n    if (!token || !exchangeRequestId) return;\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/messages/${exchangeRequestId}`, config);\n      setMessages(data);\n    } catch (err) {\n      console.error('Error fetching messages:', err);\n      toast.error('Failed to load messages.');\n    }\n  }, [exchangeRequestId, token]);\n\n  // <--- NEW: Function to fetch review status ---\n  const fetchReviewStatus = useCallback(async exchangeId => {\n    if (!token || !exchangeId) return;\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/reviews/exchange-status/${exchangeId}`, config);\n      setReviewStatus(data);\n    } catch (err) {\n      console.error('Error fetching review status:', err);\n      toast.error('Failed to fetch review status.');\n    }\n  }, [token]);\n  useEffect(() => {\n    fetchExchangeDetails();\n    fetchMessages();\n    // Set up interval for messages\n    const messageInterval = setInterval(fetchMessages, 5000);\n    return () => clearInterval(messageInterval);\n  }, [fetchExchangeDetails, fetchMessages]);\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessageContent.trim()) {\n      toast.warn('Message cannot be empty.');\n      return;\n    }\n    if (!exchange || !user) {\n      toast.error('Cannot send message: Exchange or user data missing.');\n      return;\n    }\n    const receiverId = exchange.requester._id === user._id ? exchange.owner._id : exchange.requester._id;\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const messageData = {\n        receiverId,\n        exchangeRequestId,\n        content: newMessageContent\n      };\n      await axios.post('/api/messages', messageData, config);\n      setNewMessageContent('');\n      toast.success('Message sent!');\n      fetchMessages(); // Refresh messages after sending\n    } catch (error) {\n      const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n      toast.error(`Failed to send message: ${errorMessage}`);\n      console.error('Error sending message:', error);\n    }\n  };\n  const updateRequestStatus = async newStatus => {\n    if (!window.confirm(`Are you sure you want to ${newStatus.toLowerCase()} this request?`)) {\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(`/api/exchanges/${exchangeRequestId}/status`, {\n        status: newStatus\n      }, config);\n      setExchange(data); // Update exchange state to reflect new status\n      toast.success(`Request ${newStatus.toLowerCase()} successfully!`);\n      if (newStatus === 'Completed') {\n        // If exchange is completed, re-fetch review status to allow review\n        await fetchReviewStatus(data._id);\n        // Optionally show review form immediately\n        if (reviewStatus !== null && reviewStatus !== void 0 && reviewStatus.canReview) {\n          setShowReviewForm(true);\n        }\n      } else if (newStatus === 'Accepted' || newStatus === 'Pending' || newStatus === 'Declined' || newStatus === 'Cancelled') {\n        // Clear review status if not completed\n        setReviewStatus(null);\n        setShowReviewForm(false);\n      }\n    } catch (error) {\n      const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n      toast.error(`Failed to update request: ${errorMessage}`);\n      console.error('Error updating request status:', error);\n    }\n  };\n\n  // <--- NEW: Handle review submission callback ---\n  const handleReviewSubmitted = submittedReview => {\n    toast.success('Review submitted successfully!');\n    setShowReviewForm(false); // Hide the form after submission\n    // Update review status to reflect that a review has been made\n    setReviewStatus(prev => ({\n      ...prev,\n      canReview: false,\n      hasReviewed: true,\n      message: 'You have already reviewed this exchange.'\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message\",\n      children: \"Loading exchange details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 16\n    }, this);\n  }\n  if (!exchange) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message no-content\",\n      children: \"Exchange request not found or you are not authorized to view it.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 16\n    }, this);\n  }\n  const isRequester = exchange.requester._id === user._id;\n  const isOwner = exchange.owner._id === user._id;\n  const otherParty = isRequester ? exchange.owner : exchange.requester;\n  const getStatusClass = status => {\n    switch (status) {\n      case 'Accepted':\n        return 'status-accepted';\n      case 'Declined':\n        return 'status-declined';\n      case 'Completed':\n        return 'status-completed';\n      case 'Cancelled':\n        return 'status-cancelled';\n      default:\n        return 'status-pending';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exchange-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-heading\",\n      children: \"Exchange Request Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exchange-info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 20\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `exchange-status ${getStatusClass(exchange.status)}`,\n          children: exchange.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Requested Book:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 20\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: [\"\\\"\", exchange.requestedBook.title, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 53\n        }, this), \" by \", exchange.requestedBook.author, \" (Owner: \", exchange.owner.username, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), exchange.offeredBook && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Offered Book:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 24\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: [\"\\\"\", exchange.offeredBook.title, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 55\n        }, this), \" by \", exchange.offeredBook.author, \" (Owner: \", exchange.requester.username, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Initial Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 20\n        }, this), \" \", exchange.requestMessage || 'No message provided.']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Initiated by:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 20\n        }, this), \" \", exchange.requester.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"meta-info\",\n        children: [\"On: \", new Date(exchange.createdAt).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), exchange.status === 'Completed' && exchange.completedAt && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"meta-info status-completed\",\n        children: [\"Completed on: \", new Date(exchange.completedAt).toLocaleDateString(), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exchange-actions-bar\",\n      children: [exchange.status === 'Pending' && isOwner && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateRequestStatus('Accepted'),\n          className: \"btn btn-success\",\n          children: \"Accept Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateRequestStatus('Declined'),\n          className: \"btn btn-danger\",\n          children: \"Decline Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), (exchange.status === 'Pending' || exchange.status === 'Accepted') && (isRequester || isOwner) && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateRequestStatus('Cancelled'),\n        className: \"btn btn-warning\",\n        children: \"Cancel Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this), exchange.status === 'Accepted' && (isRequester || isOwner) && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateRequestStatus('Completed'),\n        className: \"btn btn-primary\",\n        children: \"Mark as Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), exchange.status === 'Completed' && reviewStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Review \", otherParty.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this), reviewStatus.hasReviewed ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message reviewed-message\",\n        children: \"You have already reviewed this exchange.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }, this) : reviewStatus.canReview ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowReviewForm(!showReviewForm),\n          className: \"btn btn-info\",\n          children: showReviewForm ? 'Hide Review Form' : 'Leave a Review'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 29\n        }, this), showReviewForm && /*#__PURE__*/_jsxDEV(ReviewForm, {\n          revieweeId: reviewStatus.otherPartyId,\n          exchangeId: exchange._id,\n          onReviewSubmitted: handleReviewSubmitted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: \"Unable to review this exchange at this time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }, this), (exchange.status === 'Pending' || exchange.status === 'Accepted') && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messaging-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Messages with \", otherParty.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message no-messages\",\n          children: \"No messages yet for this exchange.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 29\n        }, this) : messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-item ${msg.sender._id === user._id ? 'sent' : 'received'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-sender\",\n            children: msg.sender._id === user._id ? 'You' : msg.sender.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-content\",\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-timestamp\",\n            children: new Date(msg.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 37\n          }, this)]\n        }, msg._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"message-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newMessageContent,\n          onChange: e => setNewMessageContent(e.target.value),\n          rows: \"2\",\n          placeholder: \"Type your message here...\",\n          className: \"message-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-send\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n}\n_s(ExchangeDetailsPage, \"n4jezfc3EeNz5vjlIdO//HOZ6Zk=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = ExchangeDetailsPage;\nexport default ExchangeDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"ExchangeDetailsPage\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","axios","toast","useParams","useNavigate","useAuth","ReviewForm","jsxDEV","_jsxDEV","Fragment","_Fragment","ExchangeDetailsPage","_s","id","exchangeRequestId","token","user","navigate","exchange","setExchange","messages","setMessages","newMessageContent","setNewMessageContent","loading","setLoading","error","setError","reviewStatus","setReviewStatus","showReviewForm","setShowReviewForm","messagesEndRef","fetchExchangeDetails","config","headers","Authorization","data","get","status","fetchReviewStatus","_id","err","console","errorMessage","response","message","fetchMessages","exchangeId","messageInterval","setInterval","clearInterval","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","warn","receiverId","requester","owner","messageData","content","post","success","updateRequestStatus","newStatus","window","confirm","toLowerCase","put","canReview","handleReviewSubmitted","submittedReview","prev","hasReviewed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isRequester","isOwner","otherParty","getStatusClass","requestedBook","title","author","username","offeredBook","requestMessage","Date","createdAt","toLocaleDateString","completedAt","onClick","revieweeId","otherPartyId","onReviewSubmitted","length","map","msg","sender","toLocaleString","ref","onSubmit","value","onChange","target","rows","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/itach/Documents/book-exchange-mern/frontend/src/pages/ExchangeDetailsPage.js"],"sourcesContent":["// frontend/src/pages/ExchangeDetailsPage.js\r\nimport React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport ReviewForm from '../components/ReviewForm'; // <--- NEW IMPORT\r\nimport '../pages/ExchangeDetails.css'; // Assuming you have general Exchange Details styling\r\nimport '../App.css'; // For page-heading, status-message\r\n\r\nfunction ExchangeDetailsPage() {\r\n    const { id: exchangeRequestId } = useParams();\r\n    const { token, user } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const [exchange, setExchange] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessageContent, setNewMessageContent] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [reviewStatus, setReviewStatus] = useState(null); // <--- NEW STATE for review status\r\n    const [showReviewForm, setShowReviewForm] = useState(false); // <--- NEW STATE to toggle review form\r\n\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const fetchExchangeDetails = useCallback(async () => {\r\n        if (!token || !exchangeRequestId) return;\r\n        try {\r\n            setLoading(true);\r\n            const config = { headers: { Authorization: `Bearer ${token}` } };\r\n            const { data } = await axios.get(`/api/exchanges/${exchangeRequestId}`, config);\r\n            setExchange(data);\r\n            setLoading(false);\r\n            // Fetch review status immediately after exchange details are loaded\r\n            if (data.status === 'Completed') {\r\n                await fetchReviewStatus(data._id);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error fetching exchange details:', err);\r\n            const errorMessage = err.response && err.response.data.message\r\n                ? err.response.data.message\r\n                : err.message;\r\n            setError(`Failed to load exchange details: ${errorMessage}`);\r\n            toast.error(`Failed to load exchange details: ${errorMessage}`);\r\n            setLoading(false);\r\n            if (err.response && (err.response.status === 403 || err.response.status === 404)) {\r\n                navigate('/exchanges'); // Redirect if not authorized or not found\r\n            }\r\n        }\r\n    }, [exchangeRequestId, token, navigate]);\r\n\r\n    const fetchMessages = useCallback(async () => {\r\n        if (!token || !exchangeRequestId) return;\r\n        try {\r\n            const config = { headers: { Authorization: `Bearer ${token}` } };\r\n            const { data } = await axios.get(`/api/messages/${exchangeRequestId}`, config);\r\n            setMessages(data);\r\n        } catch (err) {\r\n            console.error('Error fetching messages:', err);\r\n            toast.error('Failed to load messages.');\r\n        }\r\n    }, [exchangeRequestId, token]);\r\n\r\n    // <--- NEW: Function to fetch review status ---\r\n    const fetchReviewStatus = useCallback(async (exchangeId) => {\r\n        if (!token || !exchangeId) return;\r\n        try {\r\n            const config = { headers: { Authorization: `Bearer ${token}` } };\r\n            const { data } = await axios.get(`/api/reviews/exchange-status/${exchangeId}`, config);\r\n            setReviewStatus(data);\r\n        } catch (err) {\r\n            console.error('Error fetching review status:', err);\r\n            toast.error('Failed to fetch review status.');\r\n        }\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        fetchExchangeDetails();\r\n        fetchMessages();\r\n        // Set up interval for messages\r\n        const messageInterval = setInterval(fetchMessages, 5000);\r\n        return () => clearInterval(messageInterval);\r\n    }, [fetchExchangeDetails, fetchMessages]);\r\n\r\n    useEffect(() => {\r\n        if (messagesEndRef.current) {\r\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    }, [messages]);\r\n\r\n    const handleSendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (!newMessageContent.trim()) {\r\n            toast.warn('Message cannot be empty.');\r\n            return;\r\n        }\r\n        if (!exchange || !user) {\r\n            toast.error('Cannot send message: Exchange or user data missing.');\r\n            return;\r\n        }\r\n\r\n        const receiverId = exchange.requester._id === user._id ? exchange.owner._id : exchange.requester._id;\r\n\r\n        try {\r\n            const config = { headers: { Authorization: `Bearer ${token}` } };\r\n            const messageData = {\r\n                receiverId,\r\n                exchangeRequestId,\r\n                content: newMessageContent,\r\n            };\r\n            await axios.post('/api/messages', messageData, config);\r\n            setNewMessageContent('');\r\n            toast.success('Message sent!');\r\n            fetchMessages(); // Refresh messages after sending\r\n        } catch (error) {\r\n            const errorMessage = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n            toast.error(`Failed to send message: ${errorMessage}`);\r\n            console.error('Error sending message:', error);\r\n        }\r\n    };\r\n\r\n    const updateRequestStatus = async (newStatus) => {\r\n        if (!window.confirm(`Are you sure you want to ${newStatus.toLowerCase()} this request?`)) {\r\n            return;\r\n        }\r\n        try {\r\n            const config = { headers: { Authorization: `Bearer ${token}` } };\r\n            const { data } = await axios.put(`/api/exchanges/${exchangeRequestId}/status`, { status: newStatus }, config);\r\n            setExchange(data); // Update exchange state to reflect new status\r\n            toast.success(`Request ${newStatus.toLowerCase()} successfully!`);\r\n\r\n            if (newStatus === 'Completed') {\r\n                // If exchange is completed, re-fetch review status to allow review\r\n                await fetchReviewStatus(data._id);\r\n                // Optionally show review form immediately\r\n                if (reviewStatus?.canReview) {\r\n                    setShowReviewForm(true);\r\n                }\r\n            } else if (newStatus === 'Accepted' || newStatus === 'Pending' || newStatus === 'Declined' || newStatus === 'Cancelled') {\r\n                 // Clear review status if not completed\r\n                setReviewStatus(null);\r\n                setShowReviewForm(false);\r\n            }\r\n        } catch (error) {\r\n            const errorMessage = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n            toast.error(`Failed to update request: ${errorMessage}`);\r\n            console.error('Error updating request status:', error);\r\n        }\r\n    };\r\n\r\n    // <--- NEW: Handle review submission callback ---\r\n    const handleReviewSubmitted = (submittedReview) => {\r\n        toast.success('Review submitted successfully!');\r\n        setShowReviewForm(false); // Hide the form after submission\r\n        // Update review status to reflect that a review has been made\r\n        setReviewStatus(prev => ({ ...prev, canReview: false, hasReviewed: true, message: 'You have already reviewed this exchange.' }));\r\n    };\r\n\r\n    if (loading) {\r\n        return <div className=\"status-message\">Loading exchange details...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"status-message error-message\">Error: {error}</div>;\r\n    }\r\n\r\n    if (!exchange) {\r\n        return <div className=\"status-message no-content\">Exchange request not found or you are not authorized to view it.</div>;\r\n    }\r\n\r\n    const isRequester = exchange.requester._id === user._id;\r\n    const isOwner = exchange.owner._id === user._id;\r\n    const otherParty = isRequester ? exchange.owner : exchange.requester;\r\n\r\n    const getStatusClass = (status) => {\r\n        switch (status) {\r\n            case 'Accepted': return 'status-accepted';\r\n            case 'Declined': return 'status-declined';\r\n            case 'Completed': return 'status-completed';\r\n            case 'Cancelled': return 'status-cancelled';\r\n            default: return 'status-pending';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"exchange-details-container\">\r\n            <h1 className=\"page-heading\">Exchange Request Details</h1>\r\n\r\n            <div className=\"exchange-info-card\">\r\n                <p><strong>Status:</strong> <span className={`exchange-status ${getStatusClass(exchange.status)}`}>{exchange.status}</span></p>\r\n                <p><strong>Requested Book:</strong> <span className=\"highlight\">\"{exchange.requestedBook.title}\"</span> by {exchange.requestedBook.author} (Owner: {exchange.owner.username})</p>\r\n                {exchange.offeredBook && (\r\n                    <p><strong>Offered Book:</strong> <span className=\"highlight\">\"{exchange.offeredBook.title}\"</span> by {exchange.offeredBook.author} (Owner: {exchange.requester.username})</p>\r\n                )}\r\n                <p><strong>Initial Message:</strong> {exchange.requestMessage || 'No message provided.'}</p>\r\n                <p><strong>Initiated by:</strong> {exchange.requester.username}</p>\r\n                <p className=\"meta-info\">On: {new Date(exchange.createdAt).toLocaleDateString()}</p>\r\n                {exchange.status === 'Completed' && exchange.completedAt && (\r\n                    <p className=\"meta-info status-completed\">Completed on: {new Date(exchange.completedAt).toLocaleDateString()}.</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Status Update Actions */}\r\n            <div className=\"exchange-actions-bar\">\r\n                {exchange.status === 'Pending' && isOwner && (\r\n                    <>\r\n                        <button onClick={() => updateRequestStatus('Accepted')} className=\"btn btn-success\">Accept Request</button>\r\n                        <button onClick={() => updateRequestStatus('Declined')} className=\"btn btn-danger\">Decline Request</button>\r\n                    </>\r\n                )}\r\n                {(exchange.status === 'Pending' || exchange.status === 'Accepted') && (isRequester || isOwner) && (\r\n                    <button onClick={() => updateRequestStatus('Cancelled')} className=\"btn btn-warning\">Cancel Request</button>\r\n                )}\r\n                {exchange.status === 'Accepted' && (isRequester || isOwner) && (\r\n                    <button onClick={() => updateRequestStatus('Completed')} className=\"btn btn-primary\">Mark as Completed</button>\r\n                )}\r\n            </div>\r\n\r\n            {/* Review Section --- NEW --- */}\r\n            {exchange.status === 'Completed' && reviewStatus && (\r\n                <div className=\"review-section\">\r\n                    <h2>Review {otherParty.username}</h2>\r\n                    {reviewStatus.hasReviewed ? (\r\n                        <p className=\"status-message reviewed-message\">You have already reviewed this exchange.</p>\r\n                    ) : reviewStatus.canReview ? (\r\n                        <>\r\n                            <button onClick={() => setShowReviewForm(!showReviewForm)} className=\"btn btn-info\">\r\n                                {showReviewForm ? 'Hide Review Form' : 'Leave a Review'}\r\n                            </button>\r\n                            {showReviewForm && (\r\n                                <ReviewForm\r\n                                    revieweeId={reviewStatus.otherPartyId}\r\n                                    exchangeId={exchange._id}\r\n                                    onReviewSubmitted={handleReviewSubmitted}\r\n                                />\r\n                            )}\r\n                        </>\r\n                    ) : (\r\n                        <p className=\"status-message\">Unable to review this exchange at this time.</p>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n\r\n            {/* Messaging Section - Only visible if exchange is Accepted or Pending */}\r\n            {(exchange.status === 'Pending' || exchange.status === 'Accepted') && (\r\n                <div className=\"messaging-section\">\r\n                    <h2>Messages with {otherParty.username}</h2>\r\n                    <div className=\"message-list\">\r\n                        {messages.length === 0 ? (\r\n                            <p className=\"status-message no-messages\">No messages yet for this exchange.</p>\r\n                        ) : (\r\n                            messages.map((msg) => (\r\n                                <div key={msg._id} className={`message-item ${msg.sender._id === user._id ? 'sent' : 'received'}`}>\r\n                                    <p className=\"message-sender\">{msg.sender._id === user._id ? 'You' : msg.sender.username}</p>\r\n                                    <p className=\"message-content\">{msg.content}</p>\r\n                                    <span className=\"message-timestamp\">\r\n                                        {new Date(msg.createdAt).toLocaleString()}\r\n                                    </span>\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                        <div ref={messagesEndRef} />\r\n                    </div>\r\n                    <form onSubmit={handleSendMessage} className=\"message-form\">\r\n                        <textarea\r\n                            value={newMessageContent}\r\n                            onChange={(e) => setNewMessageContent(e.target.value)}\r\n                            rows=\"2\"\r\n                            placeholder=\"Type your message here...\"\r\n                            className=\"message-input\"\r\n                        ></textarea>\r\n                        <button type=\"submit\" className=\"btn btn-send\">Send</button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExchangeDetailsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}