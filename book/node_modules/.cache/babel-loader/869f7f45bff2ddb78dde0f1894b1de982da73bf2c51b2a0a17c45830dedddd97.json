{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itach\\\\Documents\\\\book-exchange-mern\\\\frontend\\\\src\\\\pages\\\\BookListPage.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/BookListPage.js\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport placeholderImage from '../assests/placeholder.png'; // Make sure this path is correct\nimport './BookList.css'; // General styling for book list/cards\nimport '../App.css'; // For page-heading, status-message\nimport { useDebounce } from '../hooks/useDebounce'; // Assuming you have a useDebounce hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookListPage() {\n  _s();\n  const {\n    user,\n    isAuthenticated,\n    token\n  } = useAuth();\n  const navigate = useNavigate();\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(''); // State for search input\n  const [genreFilter, setGenreFilter] = useState('All'); // State for genre filter\n  const [conditionFilter, setConditionFilter] = useState('All'); // State for condition filter\n  const debouncedSearchTerm = useDebounce(searchTerm, 500); // Debounce search term\n\n  // State to manage wishlist status for displayed books (map bookId to wishlistItemId)\n  const [wishlistStatus, setWishlistStatus] = useState({});\n  const fetchBooks = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const params = {};\n      if (debouncedSearchTerm) {\n        params.keyword = debouncedSearchTerm;\n      }\n      if (genreFilter !== 'All') {\n        params.genre = genreFilter;\n      }\n      if (conditionFilter !== 'All') {\n        params.condition = conditionFilter;\n      }\n      const {\n        data\n      } = await axios.get('/api/books', {\n        params\n      });\n      setBooks(data);\n      setLoading(false);\n\n      // --- NEW: Fetch wishlist status for all fetched books ---\n      if (isAuthenticated && token && user) {\n        const statusPromises = data.map(book => axios.get(`/api/wishlist/status/${book._id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(res => ({\n          bookId: book._id,\n          ...res.data\n        })));\n        const statuses = await Promise.all(statusPromises);\n        const newWishlistStatus = {};\n        statuses.forEach(status => {\n          newWishlistStatus[status.bookId] = {\n            isInWishlist: status.isInWishlist,\n            wishlistItemId: status.wishlistItemId\n          };\n        });\n        setWishlistStatus(newWishlistStatus);\n      } else {\n        setWishlistStatus({}); // Clear status if not authenticated\n      }\n    } catch (err) {\n      console.error('Error fetching books:', err);\n      setError('Failed to load books. Please try again later.');\n      toast.error('Failed to load books.');\n      setLoading(false);\n    }\n  }, [debouncedSearchTerm, genreFilter, conditionFilter, isAuthenticated, token, user]);\n  useEffect(() => {\n    fetchBooks();\n  }, [fetchBooks]);\n  const handleRequestExchange = (requestedBookId, ownerId, requestedBookTitle) => {\n    if (!isAuthenticated) {\n      toast.warn('Please log in to request an exchange.');\n      navigate('/login');\n      return;\n    }\n    if (user._id === ownerId) {\n      toast.info('You cannot request an exchange for your own book.');\n      return;\n    }\n    navigate(`/request-exchange?requestedBookId=${requestedBookId}&ownerId=${ownerId}&requestedBookTitle=${encodeURIComponent(requestedBookTitle)}`);\n  };\n\n  // --- NEW: Handle Add/Remove from Wishlist ---\n  const handleToggleWishlist = async bookId => {\n    if (!isAuthenticated) {\n      toast.warn('Please log in to manage your wishlist.');\n      navigate('/login');\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const currentStatus = wishlistStatus[bookId];\n      if (currentStatus && currentStatus.isInWishlist) {\n        // Remove from wishlist\n        await axios.delete(`/api/wishlist/${currentStatus.wishlistItemId}`, config);\n        toast.info('Removed from wishlist!');\n        setWishlistStatus(prev => ({\n          ...prev,\n          [bookId]: {\n            isInWishlist: false,\n            wishlistItemId: null\n          }\n        }));\n      } else {\n        // Add to wishlist\n        await axios.post('/api/wishlist', {\n          bookId: bookId\n        }, config);\n        toast.success('Added to wishlist!');\n        // Re-fetch status to get the new wishlistItemId\n        const {\n          data\n        } = await axios.get(`/api/wishlist/status/${bookId}`, config);\n        setWishlistStatus(prev => ({\n          ...prev,\n          [bookId]: {\n            isInWishlist: data.isInWishlist,\n            wishlistItemId: data.wishlistItemId\n          }\n        }));\n      }\n    } catch (error) {\n      console.error('Error toggling wishlist:', error);\n      const errorMessage = error.response && error.response.data.message ? error.response.data.message : error.message;\n      toast.error(`Wishlist update failed: ${errorMessage}`);\n    }\n  };\n\n  // Assuming you have unique genres from your data or a predefined list\n  const availableGenres = ['All', 'Fiction', 'Non-Fiction', 'Fantasy', 'Sci-Fi', 'Mystery', 'Thriller', 'Biography', 'History', 'Self-Help', 'Childrens', 'Education'];\n  const availableConditions = ['All', 'New', 'Like New', 'Good', 'Fair', 'Worn'];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message\",\n      children: \"Loading books...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-list-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-heading\",\n      children: \"Available Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title, author, description...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: genreFilter,\n        onChange: e => setGenreFilter(e.target.value),\n        className: \"filter-select\",\n        children: availableGenres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre,\n          children: genre\n        }, genre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: conditionFilter,\n        onChange: e => setConditionFilter(e.target.value),\n        className: \"filter-select\",\n        children: availableConditions.map(condition => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: condition,\n          children: condition\n        }, condition, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), books.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message no-books\",\n      children: \"No books are available for exchange at the moment. Be the first to add one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-grid\",\n      children: books.map(book => {\n        var _wishlistStatus$book$, _wishlistStatus$book$2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: book.imageUrl,\n            alt: book.title,\n            className: \"book-cover\",\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = placeholderImage;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"book-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"book-title\",\n              children: book.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"book-author\",\n              children: [\"by \", book.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"book-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Genre:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 58\n              }, this), \" \", book.genre || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"book-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Condition:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 58\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `book-condition-${book.condition.toLowerCase().replace(' ', '-')}`,\n                children: book.condition\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 86\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"book-owner\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Owner:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"owner-username\",\n                children: book.owner ? book.owner.username : 'Unknown'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 83\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"book-description\",\n              children: book.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"book-actions\",\n            children: [isAuthenticated && user && book.owner && user._id !== book.owner._id && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRequestExchange(book._id, book.owner._id, book.title),\n              className: \"btn btn-primary\",\n              children: \"Request Exchange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this), isAuthenticated && user && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToggleWishlist(book._id),\n              className: `btn ${(_wishlistStatus$book$ = wishlistStatus[book._id]) !== null && _wishlistStatus$book$ !== void 0 && _wishlistStatus$book$.isInWishlist ? 'btn-secondary' : 'btn-outline-primary'}`,\n              children: (_wishlistStatus$book$2 = wishlistStatus[book._id]) !== null && _wishlistStatus$book$2 !== void 0 && _wishlistStatus$book$2.isInWishlist ? 'Remove from Wishlist' : 'Add to Wishlist'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)]\n        }, book._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n}\n_s(BookListPage, \"IPfyVL6ZkaQDC0Yvu3+ETR2N/20=\", false, function () {\n  return [useAuth, useNavigate, useDebounce];\n});\n_c = BookListPage;\nexport default BookListPage;\nvar _c;\n$RefreshReg$(_c, \"BookListPage\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","toast","useAuth","useNavigate","placeholderImage","useDebounce","jsxDEV","_jsxDEV","BookListPage","_s","user","isAuthenticated","token","navigate","books","setBooks","loading","setLoading","error","setError","searchTerm","setSearchTerm","genreFilter","setGenreFilter","conditionFilter","setConditionFilter","debouncedSearchTerm","wishlistStatus","setWishlistStatus","fetchBooks","params","keyword","genre","condition","data","get","statusPromises","map","book","_id","headers","Authorization","then","res","bookId","statuses","Promise","all","newWishlistStatus","forEach","status","isInWishlist","wishlistItemId","err","console","handleRequestExchange","requestedBookId","ownerId","requestedBookTitle","warn","info","encodeURIComponent","handleToggleWishlist","config","currentStatus","delete","prev","post","success","errorMessage","response","message","availableGenres","availableConditions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","_wishlistStatus$book$","_wishlistStatus$book$2","src","imageUrl","alt","title","onError","onerror","author","toLowerCase","replace","owner","username","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/itach/Documents/book-exchange-mern/frontend/src/pages/BookListPage.js"],"sourcesContent":["// frontend/src/pages/BookListPage.js\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport placeholderImage from '../assests/placeholder.png'; // Make sure this path is correct\r\nimport './BookList.css'; // General styling for book list/cards\r\nimport '../App.css'; // For page-heading, status-message\r\nimport { useDebounce} from '../hooks/useDebounce'; // Assuming you have a useDebounce hook\r\n\r\nfunction BookListPage() {\r\n    const { user, isAuthenticated, token } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const [books, setBooks] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState(''); // State for search input\r\n    const [genreFilter, setGenreFilter] = useState('All'); // State for genre filter\r\n    const [conditionFilter, setConditionFilter] = useState('All'); // State for condition filter\r\n    const debouncedSearchTerm = useDebounce(searchTerm, 500); // Debounce search term\r\n\r\n    // State to manage wishlist status for displayed books (map bookId to wishlistItemId)\r\n    const [wishlistStatus, setWishlistStatus] = useState({});\r\n\r\n    const fetchBooks = useCallback(async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const params = {};\r\n            if (debouncedSearchTerm) {\r\n                params.keyword = debouncedSearchTerm;\r\n            }\r\n            if (genreFilter !== 'All') {\r\n                params.genre = genreFilter;\r\n            }\r\n            if (conditionFilter !== 'All') {\r\n                params.condition = conditionFilter;\r\n            }\r\n\r\n            const { data } = await axios.get('/api/books', { params });\r\n            setBooks(data);\r\n            setLoading(false);\r\n            \r\n            // --- NEW: Fetch wishlist status for all fetched books ---\r\n            if (isAuthenticated && token && user) {\r\n                const statusPromises = data.map(book =>\r\n                    axios.get(`/api/wishlist/status/${book._id}`, {\r\n                        headers: { Authorization: `Bearer ${token}` }\r\n                    }).then(res => ({ bookId: book._id, ...res.data }))\r\n                );\r\n                const statuses = await Promise.all(statusPromises);\r\n                const newWishlistStatus = {};\r\n                statuses.forEach(status => {\r\n                    newWishlistStatus[status.bookId] = {\r\n                        isInWishlist: status.isInWishlist,\r\n                        wishlistItemId: status.wishlistItemId\r\n                    };\r\n                });\r\n                setWishlistStatus(newWishlistStatus);\r\n            } else {\r\n                setWishlistStatus({}); // Clear status if not authenticated\r\n            }\r\n\r\n        } catch (err) {\r\n            console.error('Error fetching books:', err);\r\n            setError('Failed to load books. Please try again later.');\r\n            toast.error('Failed to load books.');\r\n            setLoading(false);\r\n        }\r\n    }, [debouncedSearchTerm, genreFilter, conditionFilter, isAuthenticated, token, user]);\r\n\r\n    useEffect(() => {\r\n        fetchBooks();\r\n    }, [fetchBooks]);\r\n\r\n    const handleRequestExchange = (requestedBookId, ownerId, requestedBookTitle) => {\r\n        if (!isAuthenticated) {\r\n            toast.warn('Please log in to request an exchange.');\r\n            navigate('/login');\r\n            return;\r\n        }\r\n        if (user._id === ownerId) {\r\n            toast.info('You cannot request an exchange for your own book.');\r\n            return;\r\n        }\r\n        navigate(`/request-exchange?requestedBookId=${requestedBookId}&ownerId=${ownerId}&requestedBookTitle=${encodeURIComponent(requestedBookTitle)}`);\r\n    };\r\n\r\n    // --- NEW: Handle Add/Remove from Wishlist ---\r\n    const handleToggleWishlist = async (bookId) => {\r\n        if (!isAuthenticated) {\r\n            toast.warn('Please log in to manage your wishlist.');\r\n            navigate('/login');\r\n            return;\r\n        }\r\n        try {\r\n            const config = { headers: { Authorization: `Bearer ${token}` } };\r\n            const currentStatus = wishlistStatus[bookId];\r\n\r\n            if (currentStatus && currentStatus.isInWishlist) {\r\n                // Remove from wishlist\r\n                await axios.delete(`/api/wishlist/${currentStatus.wishlistItemId}`, config);\r\n                toast.info('Removed from wishlist!');\r\n                setWishlistStatus(prev => ({ ...prev, [bookId]: { isInWishlist: false, wishlistItemId: null } }));\r\n            } else {\r\n                // Add to wishlist\r\n                await axios.post('/api/wishlist', { bookId: bookId }, config);\r\n                toast.success('Added to wishlist!');\r\n                // Re-fetch status to get the new wishlistItemId\r\n                const { data } = await axios.get(`/api/wishlist/status/${bookId}`, config);\r\n                setWishlistStatus(prev => ({ ...prev, [bookId]: { isInWishlist: data.isInWishlist, wishlistItemId: data.wishlistItemId } }));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error toggling wishlist:', error);\r\n            const errorMessage = error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n            toast.error(`Wishlist update failed: ${errorMessage}`);\r\n        }\r\n    };\r\n\r\n    // Assuming you have unique genres from your data or a predefined list\r\n    const availableGenres = ['All', 'Fiction', 'Non-Fiction', 'Fantasy', 'Sci-Fi', 'Mystery', 'Thriller', 'Biography', 'History', 'Self-Help', 'Childrens', 'Education'];\r\n    const availableConditions = ['All', 'New', 'Like New', 'Good', 'Fair', 'Worn'];\r\n\r\n    if (loading) {\r\n        return <div className=\"status-message\">Loading books...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"status-message error-message\">Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"book-list-page-container\">\r\n            <h1 className=\"page-heading\">Available Books</h1>\r\n\r\n            {/* Search and Filter Section */}\r\n            <div className=\"filter-section\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search by title, author, description...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"search-input\"\r\n                />\r\n                <select value={genreFilter} onChange={(e) => setGenreFilter(e.target.value)} className=\"filter-select\">\r\n                    {availableGenres.map(genre => (\r\n                        <option key={genre} value={genre}>{genre}</option>\r\n                    ))}\r\n                </select>\r\n                <select value={conditionFilter} onChange={(e) => setConditionFilter(e.target.value)} className=\"filter-select\">\r\n                    {availableConditions.map(condition => (\r\n                        <option key={condition} value={condition}>{condition}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {books.length === 0 ? (\r\n                <p className=\"status-message no-books\">No books are available for exchange at the moment. Be the first to add one!</p>\r\n            ) : (\r\n                <div className=\"book-grid\">\r\n                    {books.map((book) => (\r\n                        <div key={book._id} className=\"book-card\">\r\n                            <img\r\n                                src={book.imageUrl}\r\n                                alt={book.title}\r\n                                className=\"book-cover\"\r\n                                onError={(e) => { e.target.onerror = null; e.target.src = placeholderImage; }}\r\n                            />\r\n                            <div className=\"book-info\">\r\n                                <h3 className=\"book-title\">{book.title}</h3>\r\n                                <p className=\"book-author\">by {book.author}</p>\r\n                                <p className=\"book-meta\"><strong>Genre:</strong> {book.genre || 'N/A'}</p>\r\n                                <p className=\"book-meta\"><strong>Condition:</strong> <span className={`book-condition-${book.condition.toLowerCase().replace(' ', '-')}`}>{book.condition}</span></p>\r\n                                <p className=\"book-owner\"><strong>Owner:</strong> <span className=\"owner-username\">{book.owner ? book.owner.username : 'Unknown'}</span></p>\r\n                                <p className=\"book-description\">{book.description}</p>\r\n                            </div>\r\n                            <div className=\"book-actions\">\r\n                                {isAuthenticated && user && book.owner && user._id !== book.owner._id && (\r\n                                    <button\r\n                                        onClick={() => handleRequestExchange(book._id, book.owner._id, book.title)}\r\n                                        className=\"btn btn-primary\"\r\n                                    >\r\n                                        Request Exchange\r\n                                    </button>\r\n                                )}\r\n                                {isAuthenticated && user && (\r\n                                    <button\r\n                                        onClick={() => handleToggleWishlist(book._id)}\r\n                                        className={`btn ${wishlistStatus[book._id]?.isInWishlist ? 'btn-secondary' : 'btn-outline-primary'}`}\r\n                                    >\r\n                                        {wishlistStatus[book._id]?.isInWishlist ? 'Remove from Wishlist' : 'Add to Wishlist'}\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BookListPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}